[
    {
        "id": 1,
        "name": "Roblox Survival Horror Framework (Lua)",
        "description": "A modular and lightweight first-person equipment system for Roblox, built to streamline survival horror and FPS development. Features a clean Luau OOP architecture, dynamic ViewModels, and customizable keybinds.",
        "technologies": [
            "Lua",
            "Roblox Studio",
            "OOP"
        ],
        "github_url": "https://github.com/victorebouvie/survivalhorror-framework",
        "live_url": ""
    },
    {
        "id": 2,
        "name": "Portfolio API (Python)",
        "description": "A lightweight RESTful API built with Flask to serve portfolio project data in JSON format. It powers the frontend portfolio website by providing dynamic content via HTTP endpoints.",
        "technologies": [
            "Python",
            "Flask",
            "JSON",
            "REST"
        ],
        "github_url": "https://github.com/victorebouvie/python-portfolio-api",
        "live_url": ""
    },
    {
        "id": 3,
        "name": "Portfolio Frontend (JavaScript)",
        "description": "A static yet dynamic portfolio site that fetches real-time project data from a Flask API. Built to showcase skills and provide live project previews.",
        "technologies": [
            "HTML",
            "CSS",
            "JavaScript",
            "Fetch API"
        ],
        "github_url": "https://github.com/victorebouvie/js-portfolio-frontend",
        "live_url": ""
    },
    {
        "id": 4,
        "name": "GitHub Portfolio Updater (Python)",
        "description": "Keeping a portfolio up-to-date can be a repetitive task. For every new project, one must manually update the database or source code that feeds the portfolio website. This tool was built to eliminate that manual work.  The **GitHub Portfolio Updater** is an automation script that acts as a personal assistant. By providing the URL of one of your GitHub projects, the tool clones the repository, intelligently extracts key information from its `README.md` (like the project name, description, and technologies), and then updates, commits, and pushes this information to a separate repository that serves as the \"database\" for your portfolio API.  In short, it turns your `README.md` into the single source of truth for your projects, automating the entire portfolio update workflow.",
        "technologies": [
            "Automation_Tool",
            "JavaScript",
            "MIT",
            "Python",
            "TECHNOLOGY_NAME"
        ],
        "github_url": "https://github.com/victorebouvie/github-portfolio-updater",
        "live_url": ""
    }
]